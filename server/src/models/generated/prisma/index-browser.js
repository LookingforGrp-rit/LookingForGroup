
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
  client: "6.12.0",
  engine: "8047c96bbd92db98a2abc7c9323ce77c02c89dbc"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.GenresScalarFieldEnum = {
  typeId: 'typeId',
  label: 'label'
};

exports.Prisma.JobTitlesScalarFieldEnum = {
  titleId: 'titleId',
  label: 'label'
};

exports.Prisma.JobsScalarFieldEnum = {
  projectId: 'projectId',
  titleId: 'titleId',
  availability: 'availability',
  duration: 'duration',
  location: 'location',
  compensation: 'compensation',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MajorsScalarFieldEnum = {
  majorId: 'majorId',
  label: 'label'
};

exports.Prisma.MembersScalarFieldEnum = {
  projectId: 'projectId',
  userId: 'userId',
  titleId: 'titleId',
  profileVisibility: 'profileVisibility',
  createdAt: 'createdAt'
};

exports.Prisma.ProjectFollowingsScalarFieldEnum = {
  userId: 'userId',
  projectId: 'projectId',
  followedAt: 'followedAt'
};

exports.Prisma.ProjectGenresScalarFieldEnum = {
  projectId: 'projectId',
  typeId: 'typeId'
};

exports.Prisma.ProjectImagesScalarFieldEnum = {
  imageId: 'imageId',
  image: 'image',
  position: 'position',
  projectId: 'projectId'
};

exports.Prisma.ProjectSocialsScalarFieldEnum = {
  projectId: 'projectId',
  websiteId: 'websiteId',
  url: 'url'
};

exports.Prisma.ProjectTagsScalarFieldEnum = {
  projectId: 'projectId',
  tagId: 'tagId',
  position: 'position'
};

exports.Prisma.ProjectsScalarFieldEnum = {
  projectId: 'projectId',
  title: 'title',
  hook: 'hook',
  description: 'description',
  thumbnail: 'thumbnail',
  purpose: 'purpose',
  status: 'status',
  audience: 'audience',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SocialsScalarFieldEnum = {
  websiteId: 'websiteId',
  label: 'label'
};

exports.Prisma.TagsScalarFieldEnum = {
  tagId: 'tagId',
  label: 'label',
  type: 'type'
};

exports.Prisma.UserFollowingsScalarFieldEnum = {
  userId: 'userId',
  followingId: 'followingId',
  followedAt: 'followedAt'
};

exports.Prisma.UserSkillsScalarFieldEnum = {
  userId: 'userId',
  skillId: 'skillId',
  position: 'position'
};

exports.Prisma.UserSocialsScalarFieldEnum = {
  userId: 'userId',
  websiteId: 'websiteId',
  url: 'url'
};

exports.Prisma.UsersScalarFieldEnum = {
  userId: 'userId',
  username: 'username',
  ritEmail: 'ritEmail',
  firstName: 'firstName',
  lastName: 'lastName',
  profileImage: 'profileImage',
  headline: 'headline',
  pronouns: 'pronouns',
  jobTitleId: 'jobTitleId',
  majorId: 'majorId',
  academicYear: 'academicYear',
  location: 'location',
  funFact: 'funFact',
  bio: 'bio',
  visibility: 'visibility',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  phoneNumber: 'phoneNumber',
  universityId: 'universityId'
};

exports.Prisma.SkillsScalarFieldEnum = {
  skillId: 'skillId',
  label: 'label',
  type: 'type'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.GenresOrderByRelevanceFieldEnum = {
  label: 'label'
};

exports.Prisma.JobTitlesOrderByRelevanceFieldEnum = {
  label: 'label'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JobsOrderByRelevanceFieldEnum = {
  description: 'description'
};

exports.Prisma.MajorsOrderByRelevanceFieldEnum = {
  label: 'label'
};

exports.Prisma.ProjectImagesOrderByRelevanceFieldEnum = {
  image: 'image'
};

exports.Prisma.ProjectSocialsOrderByRelevanceFieldEnum = {
  url: 'url'
};

exports.Prisma.ProjectsOrderByRelevanceFieldEnum = {
  title: 'title',
  hook: 'hook',
  description: 'description',
  thumbnail: 'thumbnail',
  audience: 'audience'
};

exports.Prisma.SocialsOrderByRelevanceFieldEnum = {
  label: 'label'
};

exports.Prisma.TagsOrderByRelevanceFieldEnum = {
  label: 'label',
  type: 'type'
};

exports.Prisma.UserSocialsOrderByRelevanceFieldEnum = {
  url: 'url'
};

exports.Prisma.UsersOrderByRelevanceFieldEnum = {
  username: 'username',
  ritEmail: 'ritEmail',
  firstName: 'firstName',
  lastName: 'lastName',
  profileImage: 'profileImage',
  headline: 'headline',
  pronouns: 'pronouns',
  location: 'location',
  funFact: 'funFact',
  bio: 'bio',
  universityId: 'universityId'
};

exports.Prisma.SkillsOrderByRelevanceFieldEnum = {
  label: 'label',
  type: 'type'
};
exports.JobsAvailability = exports.$Enums.JobsAvailability = {
  FullTime: 'FullTime',
  PartTime: 'PartTime',
  Flexible: 'Flexible'
};

exports.JobsDuration = exports.$Enums.JobsDuration = {
  ShortTerm: 'ShortTerm',
  LongTerm: 'LongTerm'
};

exports.JobsLocation = exports.$Enums.JobsLocation = {
  OnSite: 'OnSite',
  Remote: 'Remote',
  Hybrid: 'Hybrid'
};

exports.JobsCompensation = exports.$Enums.JobsCompensation = {
  Unpaid: 'Unpaid',
  Paid: 'Paid'
};

exports.MembersProfileVisibility = exports.$Enums.MembersProfileVisibility = {
  private: 'private',
  public: 'public'
};

exports.ProjectsPurpose = exports.$Enums.ProjectsPurpose = {
  Personal: 'Personal',
  PortfolioPiece: 'PortfolioPiece',
  Academic: 'Academic',
  CoOp: 'CoOp'
};

exports.ProjectsStatus = exports.$Enums.ProjectsStatus = {
  Planning: 'Planning',
  Development: 'Development',
  PostProduction: 'PostProduction',
  Complete: 'Complete'
};

exports.UsersAcademicYear = exports.$Enums.UsersAcademicYear = {
  Freshman: 'Freshman',
  Sophomore: 'Sophomore',
  Junior: 'Junior',
  Senior: 'Senior',
  Grad1: 'Grad1',
  Grad2: 'Grad2'
};

exports.Prisma.ModelName = {
  Genres: 'Genres',
  JobTitles: 'JobTitles',
  Jobs: 'Jobs',
  Majors: 'Majors',
  Members: 'Members',
  ProjectFollowings: 'ProjectFollowings',
  ProjectGenres: 'ProjectGenres',
  ProjectImages: 'ProjectImages',
  ProjectSocials: 'ProjectSocials',
  ProjectTags: 'ProjectTags',
  Projects: 'Projects',
  Socials: 'Socials',
  Tags: 'Tags',
  UserFollowings: 'UserFollowings',
  UserSkills: 'UserSkills',
  UserSocials: 'UserSocials',
  Users: 'Users',
  Skills: 'Skills'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
