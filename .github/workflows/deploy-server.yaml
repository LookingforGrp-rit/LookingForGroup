name: Deploy Server

on:
  push:
    branches:
      - main
    paths:
      - "server/**"
      - "Dockerfile"
      - "containers/lfg-backend.container"
      - ".github/workflows/deploy-server.yaml"

jobs:
  build-server-image:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Docker Login
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.18.0
        with:
          push: true
          tags: |
            ghcr.io/lookingforgrp-rit/lfg-server:latest
            ghcr.io/lookingforgrp-rit/lfg-server:v${{ github.run_number }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            build.number=${{ github.run_number }}

  deploy-server-image:
    needs: build-server-image
    runs-on: ubuntu-latest
    environment: Deployment
    steps:
      - name: Checkout Quadlet File
        uses: actions/checkout@v4.2.2
        with:
          sparse-checkout: |
            containers/lfg-backend.container

      - name: Upload New Quadlet File
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASS }}
          source: ./containers/lfg-backend.container
          target: /home/${{ secrets.SERVER_USER }}/.config/containers/systemd
          strip_components: 2
          overwrite: true

      - name: Pull Image and Restart Container
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASS }}
          script: |
            set -euo pipefail
            podman pull ghcr.io/lookingforgrp-rit/lfg-server:latest
            systemctl --user daemon-reload
            systemctl --user restart lfg-backend.service
